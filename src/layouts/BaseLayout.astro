---
import BaseHead from "../components/BaseHead.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import SideBar from "../components/SideBar.astro";
import { ViewTransitions } from "astro:transitions";
import { SITE_TITLE, SITE_DESCRIPTION, TRANSITION_API } from "../config";

const {
  image,
  title = SITE_TITLE,
  description = SITE_DESCRIPTION,
  includeSidebar = true,
  sideBarActiveItemID,
  ogType,
} = Astro.props;
---

<!doctype html>
<html lang="en">
  <head>
    <BaseHead title={title} description={description} image={image} , ogType={ogType} />
    {TRANSITION_API && <ViewTransitions />}
    <script>
      // Theme management - runs before page render to prevent flash
      (function() {
        function getSystemTheme() {
          return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
        }

        function applyTheme(theme) {
          const themeMap = {
            'light': 'lofi',
            'dark': 'black',
            'system': getSystemTheme() === 'dark' ? 'black' : 'lofi'
          };
          
          document.documentElement.setAttribute('data-theme', themeMap[theme] || themeMap.system);
        }

        // Get saved preference or default to system
        const savedTheme = localStorage.getItem('theme-preference') || 'system';
        applyTheme(savedTheme);

        // Global function to set theme
        window.setTheme = function(theme) {
          localStorage.setItem('theme-preference', theme);
          applyTheme(theme);
        };

        // Listen for system theme changes (only if user hasn't set a preference)
        window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', function() {
          const currentPreference = localStorage.getItem('theme-preference') || 'system';
          if (currentPreference === 'system') {
            applyTheme('system');
          }
        });
      })();
    </script>
  </head>
  <body>
    <div class="bg-base-100 drawer lg:drawer-open">
      <input id="my-drawer" type="checkbox" class="drawer-toggle" />
      <div class="drawer-content bg-base-100">
        <Header title={SITE_TITLE} />
        <div class="md:flex md:justify-center">
          <main class="p-6 pt-10 lg:max-w-[900px] max-w-[100vw]">
            <slot />
          </main>
        </div>
        <Footer />
      </div>
      {includeSidebar && <SideBar sideBarActiveItemID={sideBarActiveItemID} />}
    </div>
  </body>
</html>
